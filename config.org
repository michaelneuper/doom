#+title: Doom Emacs Config
#+author: Michael Neuper

* Contents :toc:
- [[#basic][Basic]]
  - [[#emacs][Emacs]]
  - [[#doom][Doom]]
- [[#doom-1][Doom]]
  - [[#completion][:completion]]
  - [[#ui][:ui]]
  - [[#emacs-1][:emacs]]
  - [[#lang][:lang]]

* Basic
** Emacs
#+begin_src emacs-lisp
; credentials
(setq user-full-name "Michael Neuper"
      user-mail-address "michael@michaelneuper.com")

; autosave and backup
(setq auto-save-default t
      make-backup-files t)

; kill emacs without confiming
(setq confirm-kill-emacs nil)

; set macOS modifier keys
(if (featurep :system 'macos)
  (setq mac-command-modifier 'meta
        mac-option-modifier 'super
        mac-right-option-modifier 'none))

; line numbers
(setq display-line-numbers-type 'visual)
(custom-set-faces! ; don't make line numbers italic
  '(line-number :slant normal)
  '(line-number-current-line :slant normal))

; column fill indicator
(setq display-fill-column-indicator-column 80)
(add-hook 'prog-mode-hook #'display-fill-column-indicator-mode)

(pixel-scroll-precision-mode 1)

; make emacs faster
(use-package! gcmh
  :init
  (setq gcmh-idle-delay 5
        gcmh-high-cons-threshold (* 256 1024 1024))  ; 256MB during idle
  :config
  (gcmh-mode 1))

(setq gc-cons-threshold 200000000) ; previous 33554432
#+end_src
** Doom
#+begin_src emacs-lisp
;; THEME
(setq doom-theme 'doom-gruvbox)

;; FONTS
(setq doom-font (font-spec :family "SF Mono" :size 15.5)
      doom-serif-font (font-spec :family "ETBembo" :size 15.5)
      doom-variable-pitch-font (font-spec :family "ETBembo" :size 20)
      doom-emoji-font (font-spec :family "Apple Color Emoji" :size 15.5)
      doom-symbol-font (font-spec :family "Cascadia Code" :size 15.5))

; remap <localleader> from SPC m to SPC l
(setq doom-localleader-key "SPC l"
      doom-localleader-alt-key "M-SPC l")
#+end_src
* Doom
** :completion
*** corfu
#+begin_src emacs-lisp
(after! corfu
  (setq corfu-auto nil
        corfu-preselect 'first
        +corfu-want-tab-prefer-expand-snippets t))
#+end_src
*** copilot
#+begin_src emacs-lisp
(after! (evil copilot)
  (evil-define-key 'insert 'global (kbd "<tab>") 'copilot-accept-completion))

(map! :leader
      (:prefix "t"
       :desc "Copilot"
       "c" #'copilot-mode))
#+end_src
** :ui
*** doom-dashboard
#+begin_src emacs-lisp
(remove-hook '+doom-dashboard-functions #'doom-dashboard-widget-shortmenu)

(add-hook! '+doom-dashboard-functions :append
  (insert "\n" (+doom-dashboard--center +doom-dashboard--width "Welcome back to Emacs!"))
  (setq mode-line-format nil)
  (hl-line-mode 0)
  (read-only-mode +1)
  (solaire-mode 0))

(setq-hook! '+doom-dashboard-mode-hook evil-normal-state-cursor (list nil))

(defun my-weebery-is-always-greater ()
  (let* ((banner '("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀"
                   "⢸⠉⣹⠋⠉⢉⡟⢩⢋⠋⣽⡻⠭⢽⢉⠯⠭⠭⠭⢽⡍⢹⡍⠙⣯⠉⠉⠉⠉⠉⣿⢫⠉⠉⠉⢉⡟⠉⢿⢹⠉⢉⣉⢿⡝⡉⢩⢿⣻⢍⠉⠉⠩⢹⣟⡏⠉⠹⡉⢻⡍⡇"
                   "⢸⢠⢹⠀⠀⢸⠁⣼⠀⣼⡝⠀⠀⢸⠘⠀⠀⠀⠀⠈⢿⠀⡟⡄⠹⣣⠀⠀⠐⠀⢸⡘⡄⣤⠀⡼⠁⠀⢺⡘⠉⠀⠀⠀⠫⣪⣌⡌⢳⡻⣦⠀⠀⢃⡽⡼⡀⠀⢣⢸⠸⡇"
                   "⢸⡸⢸⠀⠀⣿⠀⣇⢠⡿⠀⠀⠀⠸⡇⠀⠀⠀⠀⠀⠘⢇⠸⠘⡀⠻⣇⠀⠀⠄⠀⡇⢣⢛⠀⡇⠀⠀⣸⠇⠀⠀⠀⠀⠀⠘⠄⢻⡀⠻⣻⣧⠀⠀⠃⢧⡇⠀⢸⢸⡇⡇"
                   "⢸⡇⢸⣠⠀⣿⢠⣿⡾⠁⠀⢀⡀⠤⢇⣀⣐⣀⠀⠤⢀⠈⠢⡡⡈⢦⡙⣷⡀⠀⠀⢿⠈⢻⣡⠁⠀⢀⠏⠀⠀⠀⢀⠀⠄⣀⣐⣀⣙⠢⡌⣻⣷⡀⢹⢸⡅⠀⢸⠸⡇⡇"
                   "⢸⡇⢸⣟⠀⢿⢸⡿⠀⣀⣶⣷⣾⡿⠿⣿⣿⣿⣿⣿⣶⣬⡀⠐⠰⣄⠙⠪⣻⣦⡀⠘⣧⠀⠙⠄⠀⠀⠀⠀⠀⣨⣴⣾⣿⠿⣿⣿⣿⣿⣿⣶⣯⣿⣼⢼⡇⠀⢸⡇⡇⠇"
                   "⢸⢧⠀⣿⡅⢸⣼⡷⣾⣿⡟⠋⣿⠓⢲⣿⣿⣿⡟⠙⣿⠛⢯⡳⡀⠈⠓⠄⡈⠚⠿⣧⣌⢧⠀⠀⠀⠀⠀⣠⣺⠟⢫⡿⠓⢺⣿⣿⣿⠏⠙⣏⠛⣿⣿⣾⡇⢀⡿⢠⠀⡇"
                   "⢸⢸⠀⢹⣷⡀⢿⡁⠀⠻⣇⠀⣇⠀⠘⣿⣿⡿⠁⠐⣉⡀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠉⠓⠳⠄⠀⠀⠀⠀⠋⠀⠘⡇⠀⠸⣿⣿⠟⠀⢈⣉⢠⡿⠁⣼⠁⣼⠃⣼⠀⡇"
                   "⢸⠸⣀⠈⣯⢳⡘⣇⠀⠀⠈⡂⣜⣆⡀⠀⠀⢀⣀⡴⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⣆⣀⠀⠀⠀⣀⣜⠕⡊⠀⣸⠇⣼⡟⢠⠏⠀⡇"
                   "⢸⠀⡟⠀⢸⡆⢹⡜⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠋⣾⡏⡇⡎⡇⠀⡇"
                   "⢸⠀⢃⡆⠀⢿⡄⠑⢽⣄⠀⠀⠀⢀⠂⠠⢁⠈⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠄⡐⢀⠂⠀⠀⣠⣮⡟⢹⣯⣸⣱⠁⠀⡇"
                   "⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁"))
         (longest-line (apply #'max (mapcar #'length banner))))
    (put-text-property
     (point)
     (dolist (line banner (point))
       (insert (+doom-dashboard--center
                +doom-dashboard--width
                (concat line (make-string (max 0 (- longest-line (length line))) 32)))
               "\n"))
     'face 'doom-dashboard-banner)))

(setq +doom-dashboard-ascii-banner-fn #'my-weebery-is-always-greater)
#+end_src
*** modeline
#+begin_src emacs-lisp
(after! doom-modeline
  (setq doom-modeline-enable-word-count nil
        doom-modeline-major-mode-icon t
        doom-modeline-height 25))
*** zen
#+begin_src emacs-lisp
(add-hook! 'org-mode-hook #'mixed-pitch-mode)

(after! mixed-pitch
  (setq mixed-pitch-set-height t)
  (setq variable-pitch-serif-font doom-variable-pitch-font)
  (set-face-attribute 'variable-pitch nil :height 1.2))
#+end_src
** :emacs
*** dired
#+begin_src emacs-lisp
(after! dirvish
  (setq! dirvish-quick-access-entries
         `(("h" "~/"           "Home")
           ("e" doom-user-dir "Doom config")
           ("c" "~/Developer/" "Code")
           ("d" "~/Downloads/" "Downloads")
           ("g" "~/GitHub/"    "GitHub")
           ("t" "~/.Trash/"    "Trash"))))
#+end_src
** :lang
*** cc
#+begin_src emacs-lisp
(after! cc-mode
  (setq c-basic-offset 2))
#+end_src
*** java
#+begin_src emacs-lisp
(after! java-mode
  (setq c-basic-offset 2))
#+end_src
*** latex
#+begin_src emacs-lisp
; use cdlatex completion instead of yasnippet
(map! :map cdlatex-mode-map
      :i "TAB" #'cdlatex-tab)

(map! :after latex
      :map cdlatex-mode-map
      :localleader
      :desc "Insert math symbol"
      "i" #'cdlatex-math-symbol
      :desc "Begin environment"
      "e" #'cdlatex-environment)
#+end_src
*** org
#+begin_src emacs-lisp
(setq org-directory "~/Documents/Org"
      org-use-property-inheritance t ; fix weird issue with src blocks
      org-startup-with-inline-images t
      org-hide-emphasis-markers t)

(after! org
  (add-to-list 'org-latex-packages-alist '("" "amsmath" t))
  (add-to-list 'org-latex-packages-alist '("" "amssymb" t))
  (add-to-list 'org-latex-packages-alist '("" "mathtools" t))
  (add-to-list 'org-latex-packages-alist '("" "mathrsfs" t)))

; xenops
(add-hook 'org-mode-hook #'xenops-mode)
(setq xenops-math-image-scale-factor 1.6
      xenops-reveal-on-entry t)

; org-roam
(use-package! org-roam
  :defer t
  :config
  (setq org-roam-directory (file-truename "~/Notes")
        org-roam-db-location (file-truename "~/Notes/org-roam.db")
        org-attach-id-dir "assets/")
  (org-roam-db-autosync-enable))

(use-package! websocket
    :after org-roam)

(use-package! org-roam-ui
    :after org-roam
    :config
    (setq org-roam-ui-sync-theme t
          org-roam-ui-follow t
          org-roam-ui-update-on-save t
          org-roam-ui-open-on-start t))

(map! :map evil-org-mode-map
        :leader
        (:prefix ("r")
         :desc "Insert node"
         "i" #'org-roam-node-insert
         :desc "Find node"
         "f" #'org-roam-node-find
         :desc "Capture to node"
         "c" #'org-roam-capture
         :desc "Toggle roam buffer"
         "b" #'org-roam-buffer-toggle
         :desc "Open random note"
         "r" #'org-roam-node-random
         :desc "Visit node"
         "v" #'org-roam-node-visit
         :desc "Open ORUI"
         "u" #'org-roam-ui-open))
#+end_src
*** python
#+begin_src emacs-lisp
(after! eglot
  (add-to-list 'eglot-server-programs '(python-mode . ("pyright-langserver" "--stdio"))))

(add-hook! python-mode
  (setq python-shell-interpreter "python3.12"
        doom-modeline-env-python-executable "python3.12"))
#+end_src
